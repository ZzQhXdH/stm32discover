; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--cpp11 --list --split_sections --debug -c --asm --interleave -o..\output\main.o --asm_dir=..\Listings\ --list_dir=..\Listings\ --depend=..\output\main.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\CMSIS -I..\System -I..\..\LedClass -I.\RTE\_LedClass -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=524 -DSTM32F429xx -DSTM32F429_439xx --omf_browse=..\output\main.crf ..\User\main.cpp]
                          THUMB

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;5      
;;;6      int main(void)
000000  484d              LDR      r0,|L1.312|
;;;7      {	
000002  b09e              SUB      sp,sp,#0x78
000004  6801              LDR      r1,[r0,#0]
000006  f0410101          ORR      r1,r1,#1
00000a  6001              STR      r1,[r0,#0]
00000c  6801              LDR      r1,[r0,#0]
00000e  f0410140          ORR      r1,r1,#0x40
000012  6001              STR      r1,[r0,#0]
000014  6801              LDR      r1,[r0,#0]
000016  f0410102          ORR      r1,r1,#2
00001a  6001              STR      r1,[r0,#0]
00001c  4846              LDR      r0,|L1.312|
00001e  3014              ADDS     r0,r0,#0x14
000020  6801              LDR      r1,[r0,#0]
000022  f0410110          ORR      r1,r1,#0x10
000026  6001              STR      r1,[r0,#0]
;;;8      	SysClock::setAHB1Periph(GpioA);
;;;9      	SysClock::setAHB1Periph(GpioG);
;;;10     	SysClock::setAHB1Periph(GpioB);
;;;11     	SysClock::setAPB2Periph(Usart1);
;;;12     	
;;;13     	LedClass led1(GPIOG, Pin13);
000028  4c44              LDR      r4,|L1.316|
00002a  220d              MOVS     r2,#0xd
00002c  4621              MOV      r1,r4
00002e  a80f              ADD      r0,sp,#0x3c
000030  f7fffffe          BL       _ZN8LedClassC1EP12GPIO_TypeDef3Pin ; LedClass::LedClass(GPIO_TypeDef*, Pin)
;;;14     	LedClass led2(GPIOG, Pin14);
000034  220e              MOVS     r2,#0xe
000036  4621              MOV      r1,r4
000038  a815              ADD      r0,sp,#0x54
00003a  f7fffffe          BL       _ZN8LedClassC1EP12GPIO_TypeDef3Pin ; LedClass::LedClass(GPIO_TypeDef*, Pin)
;;;15     	led1.open();
00003e  a80f              ADD      r0,sp,#0x3c
000040  f7fffffe          BL       _ZN8LedClass4openEv ; LedClass::open()
;;;16     	led2.open();
000044  a815              ADD      r0,sp,#0x54
000046  f7fffffe          BL       _ZN8LedClass4openEv ; LedClass::open()
;;;17     
;;;18     	
;;;19     	KeyClass key(GPIOA, Pin0, GpioClass::Float);
00004a  2200              MOVS     r2,#0
00004c  e9cd2200          STRD     r2,r2,[sp,#0]
000050  2503              MOVS     r5,#3
000052  a812              ADD      r0,sp,#0x48
000054  493a              LDR      r1,|L1.320|
000056  4614              MOV      r4,r2
000058  4613              MOV      r3,r2
00005a  9502              STR      r5,[sp,#8]
00005c  f7fffffe          BL       _ZN9GpioClassC1EP12GPIO_TypeDef3PinNS_4ModeENS_10OutputTypeENS_4PuPdENS_11OutputSpeedE ; GpioClass::GpioClass(GPIO_TypeDef*, Pin, GpioClass::Mode, GpioClass::OutputType, GpioClass::PuPd, GpioClass::OutputSpeed)
;;;20     	
;;;21     	GpioClass tx(GPIOB, Pin6, GpioClass::Af7);
000060  2601              MOVS     r6,#1
000062  2702              MOVS     r7,#2
000064  f8df80dc          LDR      r8,|L1.324|
000068  e9cd7600          STRD     r7,r6,[sp,#0]
00006c  2307              MOVS     r3,#7
00006e  2206              MOVS     r2,#6
000070  4641              MOV      r1,r8
000072  a818              ADD      r0,sp,#0x60
000074  e9cd4502          STRD     r4,r5,[sp,#8]
000078  f7fffffe          BL       _ZN9GpioClassC1EP12GPIO_TypeDef3PinNS_4AfIoENS_4ModeENS_4PuPdENS_10OutputTypeENS_11OutputSpeedE ; GpioClass::GpioClass(GPIO_TypeDef*, Pin, GpioClass::AfIo, GpioClass::Mode, GpioClass::PuPd, GpioClass::OutputType, GpioClass::OutputSpeed)
;;;22     	GpioClass rx(GPIOB, Pin7, GpioClass::Af7);
00007c  e9cd7600          STRD     r7,r6,[sp,#0]
000080  2307              MOVS     r3,#7
000082  461a              MOV      r2,r3
000084  4641              MOV      r1,r8
000086  a81b              ADD      r0,sp,#0x6c
000088  e9cd4502          STRD     r4,r5,[sp,#8]
00008c  f7fffffe          BL       _ZN9GpioClassC1EP12GPIO_TypeDef3PinNS_4AfIoENS_4ModeENS_4PuPdENS_10OutputTypeENS_11OutputSpeedE ; GpioClass::GpioClass(GPIO_TypeDef*, Pin, GpioClass::AfIo, GpioClass::Mode, GpioClass::PuPd, GpioClass::OutputType, GpioClass::OutputSpeed)
;;;23     	SerialPortClass port(USART1, tx, rx);
000090  a804              ADD      r0,sp,#0x10
000092  4f2d              LDR      r7,|L1.328|
000094  a918              ADD      r1,sp,#0x60
000096  ad1b              ADD      r5,sp,#0x6c
000098  f7fffffe          BL       _ZN9GpioClassC1ERKS_ ; GpioClass::GpioClass(const GpioClass&)
00009c  4629              MOV      r1,r5
00009e  300c              ADDS     r0,r0,#0xc
0000a0  f7fffffe          BL       _ZN9GpioClassC1ERKS_ ; GpioClass::GpioClass(const GpioClass&)
0000a4  60c7              STR      r7,[r0,#0xc]
0000a6  8204              STRH     r4,[r0,#0x10]
0000a8  f44f31e1          MOV      r1,#0x1c200
0000ac  6141              STR      r1,[r0,#0x14]
0000ae  8304              STRH     r4,[r0,#0x18]
0000b0  8344              STRH     r4,[r0,#0x1a]
0000b2  8384              STRH     r4,[r0,#0x1c]
0000b4  81bc              STRH     r4,[r7,#0xc]
0000b6  68c2              LDR      r2,[r0,#0xc]
0000b8  8b81              LDRH     r1,[r0,#0x1c]
0000ba  8211              STRH     r1,[r2,#0x10]
0000bc  68c2              LDR      r2,[r0,#0xc]
0000be  8b01              LDRH     r1,[r0,#0x18]
0000c0  8291              STRH     r1,[r2,#0x14]
0000c2  4a22              LDR      r2,|L1.332|
0000c4  6941              LDR      r1,[r0,#0x14]
0000c6  fbb2f1f1          UDIV     r1,r2,r1
0000ca  68c2              LDR      r2,[r0,#0xc]
0000cc  8111              STRH     r1,[r2,#8]
0000ce  8a01              LDRH     r1,[r0,#0x10]
0000d0  8b42              LDRH     r2,[r0,#0x1a]
0000d2  68c0              LDR      r0,[r0,#0xc]
0000d4  4311              ORRS     r1,r1,r2
0000d6  8181              STRH     r1,[r0,#0xc]
0000d8  990a              LDR      r1,[sp,#0x28]
;;;24     	port.open(SerialPortClass::WriteRead).write("Hello Word\r\n");
0000da  ad04              ADD      r5,sp,#0x10
0000dc  f242000c          MOV      r0,#0x200c
0000e0  8989              LDRH     r1,[r1,#0xc]
0000e2  f64d72f3          MOV      r2,#0xdff3
0000e6  4011              ANDS     r1,r1,r2
0000e8  9a0a              LDR      r2,[sp,#0x28]
0000ea  8191              STRH     r1,[r2,#0xc]
0000ec  990a              LDR      r1,[sp,#0x28]
0000ee  8989              LDRH     r1,[r1,#0xc]
0000f0  4301              ORRS     r1,r1,r0
0000f2  980a              LDR      r0,[sp,#0x28]
0000f4  8181              STRH     r1,[r0,#0xc]
0000f6  a016              ADR      r0,|L1.336|
0000f8  e005              B        |L1.262|
                  |L1.250|
0000fa  69a9              LDR      r1,[r5,#0x18]
0000fc  1c40              ADDS     r0,r0,#1
                  |L1.254|
0000fe  880b              LDRH     r3,[r1,#0]
000100  061b              LSLS     r3,r3,#24
000102  d5fc              BPL      |L1.254|
000104  808a              STRH     r2,[r1,#4]
                  |L1.262|
000106  7802              LDRB     r2,[r0,#0]
000108  2a00              CMP      r2,#0
00010a  d1f6              BNE      |L1.250|
00010c  4635              MOV      r5,r6                 ;8
                  |L1.270|
00010e  9812              LDR      r0,[sp,#0x48]         ;8
000110  6900              LDR      r0,[r0,#0x10]         ;8
000112  f89d104c          LDRB     r1,[sp,#0x4c]         ;8
000116  fa05f101          LSL      r1,r5,r1              ;8
00011a  4208              TST      r0,r1                 ;8
00011c  d003              BEQ      |L1.294|
;;;25     	
;;;26     	while (true) {
;;;27     	
;;;28     		if (key.getStatus() == KeyClass::Press) {
;;;29     			led1.close();
;;;30     		//	port.write("button press\r\n");
;;;31     		} else {
;;;32     			led1.open();
00011e  a80f              ADD      r0,sp,#0x3c
000120  f7fffffe          BL       _ZN8LedClass4openEv ; LedClass::open()
000124  e7f3              B        |L1.270|
                  |L1.294|
000126  f89d0040          LDRB     r0,[sp,#0x40]
00012a  fa05f600          LSL      r6,r5,r0
00012e  980f              LDR      r0,[sp,#0x3c]
000130  8346              STRH     r6,[r0,#0x1a]
000132  f88d4046          STRB     r4,[sp,#0x46]
000136  e7ea              B        |L1.270|
;;;33     		}
;;;34     
;;;35     	}
;;;36     }
;;;37     
                          ENDP

                  |L1.312|
                          DCD      0x40023830
                  |L1.316|
                          DCD      0x40021800
                  |L1.320|
                          DCD      0x40020000
                  |L1.324|
                          DCD      0x40020400
                  |L1.328|
                          DCD      0x40011000
                  |L1.332|
                          DCD      0x055d4a80
                  |L1.336|
000150  48656c6c          DCB      "Hello Word\r\n",0
000154  6f20576f
000158  72640d0a
00015c  00      
00015d  00                DCB      0
00015e  00                DCB      0
00015f  00                DCB      0

                          AREA ||.ARM.exidx||, LINKORDER=||i.main||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i.main||
                          DCD      0x00000001

                          AREA ||i._ZN9GpioClassC1EP12GPIO_TypeDef3PinNS_4AfIoENS_4ModeENS_4PuPdENS_10OutputTypeENS_11OutputSpeedE||, COMGROUP=_ZN9GpioClassC1EP12GPIO_TypeDef3PinNS_4AfIoENS_4ModeENS_4PuPdENS_10OutputTypeENS_11OutputSpeedE, CODE, READONLY, ALIGN=1

                  _ZN9GpioClassC2EP12GPIO_TypeDef3PinNS_4AfIoENS_4ModeENS_4PuPdENS_10OutputTypeENS_11OutputSpeedE                  ; Alternate entry point ; GpioClass::GpioClass__sub_object(GPIO_TypeDef*, Pin, GpioClass::AfIo, GpioClass::Mode, GpioClass::PuPd, GpioClass::OutputType, GpioClass::OutputSpeed)
                  _ZN9GpioClassC1EP12GPIO_TypeDef3PinNS_4AfIoENS_4ModeENS_4PuPdENS_10OutputTypeENS_11OutputSpeedE PROC ; GpioClass::GpioClass(GPIO_TypeDef*, Pin, GpioClass::AfIo, GpioClass::Mode, GpioClass::PuPd, GpioClass::OutputType, GpioClass::OutputSpeed)
;;;113    		
;;;114    	GpioClass(GpioTypeDef *port, Pin pin, 
;;;115    			  AfIo af,
;;;116    			  Mode mode = Af, 
;;;117    			  PuPd pupd = Up, 
;;;118    			  OutputType type = Pp, 
;;;119    			  OutputSpeed speed = Speed_100MHz):
;;;120    		mPort(port), mPin(pin), mMode(mode), mType(type), mPupd(pupd), mSpeed(speed), mAf(af), mIsSet(false)
;;;121    	{
;;;122    		port->MODER &= ~(3 << 2 * pin);
;;;123    		port->MODER |= mode << 2 * pin;
;;;124    			
;;;125    		port->PUPDR &= ~(3 << 2 * pin);
;;;126    		port->PUPDR |= pupd << 2 * pin;
;;;127    			
;;;128    		port->OTYPER &= ~(1 << pin);
;;;129    		port->OTYPER |= type << pin;
;;;130    			
;;;131    		port->OSPEEDR &= ~(3 << 2 * pin);
;;;132    		port->OSPEEDR |= speed << 2 * pin;
;;;133    			
;;;134    		if (pin >= 8) {
;;;135    			port->AFR[1] &= ~(0x0F << (pin - 8) * 4);
;;;136    			port->AFR[1] |= af << (pin - 8) * 4;
;;;137    		} else {
;;;138    			port->AFR[0] &= ~(0x0F << pin * 4);
;;;139    			port->AFR[0] |= af << pin * 4;
;;;140    		}
;;;141    	}
;;;142    	
000000  e92d43f0          PUSH     {r4-r9,lr}
000004  2400              MOVS     r4,#0
000006  e9dd9609          LDRD     r9,r6,[sp,#0x24]
00000a  e9dd7807          LDRD     r7,r8,[sp,#0x1c]
00000e  6001              STR      r1,[r0,#0]
000010  7102              STRB     r2,[r0,#4]
000012  7147              STRB     r7,[r0,#5]
000014  f8809006          STRB     r9,[r0,#6]
000018  f8808007          STRB     r8,[r0,#7]
00001c  7206              STRB     r6,[r0,#8]
00001e  7243              STRB     r3,[r0,#9]
000020  7284              STRB     r4,[r0,#0xa]
000022  f8d1c000          LDR      r12,[r1,#0]
000026  0054              LSLS     r4,r2,#1
000028  2503              MOVS     r5,#3
00002a  40a5              LSLS     r5,r5,r4
00002c  ea2c0c05          BIC      r12,r12,r5
000030  f8c1c000          STR      r12,[r1,#0]
000034  f8d1c000          LDR      r12,[r1,#0]
000038  40a7              LSLS     r7,r7,r4
00003a  ea4c0c07          ORR      r12,r12,r7
00003e  f8c1c000          STR      r12,[r1,#0]
000042  68cf              LDR      r7,[r1,#0xc]
000044  43af              BICS     r7,r7,r5
000046  60cf              STR      r7,[r1,#0xc]
000048  68cf              LDR      r7,[r1,#0xc]
00004a  fa08f804          LSL      r8,r8,r4
00004e  ea470708          ORR      r7,r7,r8
000052  60cf              STR      r7,[r1,#0xc]
000054  684f              LDR      r7,[r1,#4]
000056  f04f0c01          MOV      r12,#1
00005a  fa0cfc02          LSL      r12,r12,r2
00005e  ea27070c          BIC      r7,r7,r12
000062  604f              STR      r7,[r1,#4]
000064  f8d1c004          LDR      r12,[r1,#4]
000068  fa09f702          LSL      r7,r9,r2
00006c  ea4c0c07          ORR      r12,r12,r7
000070  f8c1c004          STR      r12,[r1,#4]
000074  688f              LDR      r7,[r1,#8]
000076  43af              BICS     r7,r7,r5
000078  608f              STR      r7,[r1,#8]
00007a  688d              LDR      r5,[r1,#8]
00007c  40a6              LSLS     r6,r6,r4
00007e  4335              ORRS     r5,r5,r6
000080  608d              STR      r5,[r1,#8]
000082  250f              MOVS     r5,#0xf
000084  0094              LSLS     r4,r2,#2
000086  2a08              CMP      r2,#8
000088  d30a              BCC      |L14.160|
00008a  3c20              SUBS     r4,r4,#0x20
00008c  6a4a              LDR      r2,[r1,#0x24]
00008e  40a5              LSLS     r5,r5,r4
000090  43aa              BICS     r2,r2,r5
000092  624a              STR      r2,[r1,#0x24]
000094  6a4a              LDR      r2,[r1,#0x24]
000096  40a3              LSLS     r3,r3,r4
000098  4313              ORRS     r3,r3,r2
00009a  624b              STR      r3,[r1,#0x24]
                  |L14.156|
00009c  e8bd83f0          POP      {r4-r9,pc}
                  |L14.160|
0000a0  6a0a              LDR      r2,[r1,#0x20]
0000a2  40a5              LSLS     r5,r5,r4
0000a4  43aa              BICS     r2,r2,r5
0000a6  620a              STR      r2,[r1,#0x20]
0000a8  6a0a              LDR      r2,[r1,#0x20]
0000aa  40a3              LSLS     r3,r3,r4
0000ac  431a              ORRS     r2,r2,r3
0000ae  620a              STR      r2,[r1,#0x20]
0000b0  e7f4              B        |L14.156|
                          ENDP


                          AREA ||area_number.15||, COMGROUP=_ZN9GpioClassC1EP12GPIO_TypeDef3PinNS_4AfIoENS_4ModeENS_4PuPdENS_10OutputTypeENS_11OutputSpeedE, LINKORDER=||i._ZN9GpioClassC1EP12GPIO_TypeDef3PinNS_4AfIoENS_4ModeENS_4PuPdENS_10OutputTypeENS_11OutputSpeedE||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.15||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9GpioClassC1EP12GPIO_TypeDef3PinNS_4AfIoENS_4ModeENS_4PuPdENS_10OutputTypeENS_11OutputSpeedE||
                          DCD      0x00000001

                          AREA ||i._ZN9GpioClassC1EP12GPIO_TypeDef3PinNS_4ModeENS_10OutputTypeENS_4PuPdENS_11OutputSpeedE||, COMGROUP=_ZN9GpioClassC1EP12GPIO_TypeDef3PinNS_4ModeENS_10OutputTypeENS_4PuPdENS_11OutputSpeedE, CODE, READONLY, ALIGN=1

                  _ZN9GpioClassC2EP12GPIO_TypeDef3PinNS_4ModeENS_10OutputTypeENS_4PuPdENS_11OutputSpeedE                  ; Alternate entry point ; GpioClass::GpioClass__sub_object(GPIO_TypeDef*, Pin, GpioClass::Mode, GpioClass::OutputType, GpioClass::PuPd, GpioClass::OutputSpeed)
                  _ZN9GpioClassC1EP12GPIO_TypeDef3PinNS_4ModeENS_10OutputTypeENS_4PuPdENS_11OutputSpeedE PROC ; GpioClass::GpioClass(GPIO_TypeDef*, Pin, GpioClass::Mode, GpioClass::OutputType, GpioClass::PuPd, GpioClass::OutputSpeed)
;;;88     		
;;;89     	GpioClass(GpioTypeDef *port, Pin pin, 
;;;90     			  Mode mode,  
;;;91     			  OutputType type = Pp,
;;;92     			  PuPd pupd = Up,
;;;93     			  OutputSpeed speed = Speed_100MHz):
;;;94     		mPort(port), mPin(pin), mMode(mode), mType(type), mPupd(pupd), mSpeed(speed), mIsSet(false)
;;;95     	{
;;;96     		port->MODER &= ~(3 << 2 * pin);
;;;97     		port->MODER |= mode << 2 * pin;
;;;98     			
;;;99     		port->PUPDR &= ~(3 << 2 * pin);
;;;100    		port->PUPDR |= pupd << 2 * pin;
;;;101    		
;;;102    		if (mode == Input) {
;;;103    		
;;;104    			return;
;;;105    		}
;;;106    		
;;;107    		port->OTYPER &= ~(1 << pin);
;;;108    		port->OTYPER |= type << pin;
;;;109    			
;;;110    		port->OSPEEDR &= ~(3 << 2 * pin);
;;;111    		port->OSPEEDR |= speed << 2 * pin;
;;;112    	}
;;;113    		
000000  e92d43f0          PUSH     {r4-r9,lr}
000004  2400              MOVS     r4,#0
000006  e9dd7608          LDRD     r7,r6,[sp,#0x20]
00000a  f8dd901c          LDR      r9,[sp,#0x1c]
00000e  6001              STR      r1,[r0,#0]
000010  7102              STRB     r2,[r0,#4]
000012  7143              STRB     r3,[r0,#5]
000014  f8809006          STRB     r9,[r0,#6]
000018  71c7              STRB     r7,[r0,#7]
00001a  7206              STRB     r6,[r0,#8]
00001c  7284              STRB     r4,[r0,#0xa]
00001e  f8d1c000          LDR      r12,[r1,#0]
000022  0054              LSLS     r4,r2,#1
000024  2503              MOVS     r5,#3
000026  40a5              LSLS     r5,r5,r4
000028  ea2c0c05          BIC      r12,r12,r5
00002c  f8c1c000          STR      r12,[r1,#0]
000030  f8d1c000          LDR      r12,[r1,#0]
000034  fa03f804          LSL      r8,r3,r4
000038  ea4c0c08          ORR      r12,r12,r8
00003c  f8c1c000          STR      r12,[r1,#0]
000040  f8d1c00c          LDR      r12,[r1,#0xc]
000044  ea2c0c05          BIC      r12,r12,r5
000048  f8c1c00c          STR      r12,[r1,#0xc]
00004c  f8d1c00c          LDR      r12,[r1,#0xc]
000050  40a7              LSLS     r7,r7,r4
000052  ea4c0c07          ORR      r12,r12,r7
000056  f8c1c00c          STR      r12,[r1,#0xc]
00005a  2b00              CMP      r3,#0
00005c  d010              BEQ      |L21.128|
00005e  684b              LDR      r3,[r1,#4]
000060  2701              MOVS     r7,#1
000062  4097              LSLS     r7,r7,r2
000064  43bb              BICS     r3,r3,r7
000066  604b              STR      r3,[r1,#4]
000068  684f              LDR      r7,[r1,#4]
00006a  fa09f302          LSL      r3,r9,r2
00006e  431f              ORRS     r7,r7,r3
000070  604f              STR      r7,[r1,#4]
000072  688a              LDR      r2,[r1,#8]
000074  43aa              BICS     r2,r2,r5
000076  608a              STR      r2,[r1,#8]
000078  688a              LDR      r2,[r1,#8]
00007a  40a6              LSLS     r6,r6,r4
00007c  4332              ORRS     r2,r2,r6
00007e  608a              STR      r2,[r1,#8]
                  |L21.128|
000080  e8bd83f0          POP      {r4-r9,pc}
                          ENDP


                          AREA ||area_number.22||, COMGROUP=_ZN9GpioClassC1EP12GPIO_TypeDef3PinNS_4ModeENS_10OutputTypeENS_4PuPdENS_11OutputSpeedE, LINKORDER=||i._ZN9GpioClassC1EP12GPIO_TypeDef3PinNS_4ModeENS_10OutputTypeENS_4PuPdENS_11OutputSpeedE||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.22||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9GpioClassC1EP12GPIO_TypeDef3PinNS_4ModeENS_10OutputTypeENS_4PuPdENS_11OutputSpeedE||
                          DCD      0x00000001

                          AREA ||i._ZN8LedClass4openEv||, COMGROUP=_ZN8LedClass4openEv, CODE, READONLY, ALIGN=1

                  _ZN8LedClass4openEv PROC ; LedClass::open()
;;;48     	
;;;49     	inline void open(void) {
000000  7902              LDRB     r2,[r0,#4]
000002  2301              MOVS     r3,#1
000004  fa03f102          LSL      r1,r3,r2
000008  6802              LDR      r2,[r0,#0]
00000a  8311              STRH     r1,[r2,#0x18]
00000c  7283              STRB     r3,[r0,#0xa]
;;;50     		set();
;;;51     	}
00000e  4770              BX       lr
;;;52     	
                          ENDP


                          AREA ||area_number.29||, COMGROUP=_ZN8LedClass4openEv, LINKORDER=||i._ZN8LedClass4openEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.29||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8LedClass4openEv||
                          DCD      0x00000001

                          AREA ||i._ZN9GpioClassC1ERKS_||, COMGROUP=_ZN9GpioClassC1ERKS_, CODE, READONLY, ALIGN=1

                  _ZN9GpioClassC2ERKS_                  ; Alternate entry point ; GpioClass::GpioClass__sub_object(const GpioClass&)
                  _ZN9GpioClassC1ERKS_ PROC ; GpioClass::GpioClass(const GpioClass&)
;;;142    	
;;;143    	inline GpioClass(const GpioClass &other):
;;;144    		mPort(other.mPort),
;;;145    		mPin(other.mPin),
;;;146    		mMode(other.mMode),
;;;147    		mType(other.mType),
;;;148    		mPupd(other.mPupd),
;;;149    		mSpeed(other.mSpeed),
;;;150    		mAf(other.mAf),
;;;151    		mIsSet(other.mIsSet)
;;;152    	{
;;;153    		
;;;154    	}
;;;155    	
000000  680a              LDR      r2,[r1,#0]
000002  6002              STR      r2,[r0,#0]
000004  790a              LDRB     r2,[r1,#4]
000006  7102              STRB     r2,[r0,#4]
000008  794a              LDRB     r2,[r1,#5]
00000a  7142              STRB     r2,[r0,#5]
00000c  798a              LDRB     r2,[r1,#6]
00000e  7182              STRB     r2,[r0,#6]
000010  79ca              LDRB     r2,[r1,#7]
000012  71c2              STRB     r2,[r0,#7]
000014  7a0a              LDRB     r2,[r1,#8]
000016  7202              STRB     r2,[r0,#8]
000018  7a4a              LDRB     r2,[r1,#9]
00001a  7242              STRB     r2,[r0,#9]
00001c  7a89              LDRB     r1,[r1,#0xa]
00001e  7281              STRB     r1,[r0,#0xa]
000020  4770              BX       lr
                          ENDP


                          AREA ||area_number.36||, COMGROUP=_ZN9GpioClassC1ERKS_, LINKORDER=||i._ZN9GpioClassC1ERKS_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.36||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9GpioClassC1ERKS_||
                          DCD      0x00000001

                          AREA ||i._ZN8LedClassC1EP12GPIO_TypeDef3Pin||, COMGROUP=_ZN8LedClassC1EP12GPIO_TypeDef3Pin, CODE, READONLY, ALIGN=1

                  _ZN8LedClassC2EP12GPIO_TypeDef3Pin                  ; Alternate entry point ; LedClass::LedClass__sub_object(GPIO_TypeDef*, Pin)
                  _ZN8LedClassC1EP12GPIO_TypeDef3Pin PROC ; LedClass::LedClass(GPIO_TypeDef*, Pin)
;;;20     	
;;;21     	LedClass(GpioTypeDef *port, Pin pin):
;;;22     		GpioClass(port, pin, Output, Pp)
;;;23     	{
;;;24     		
;;;25     	}
;;;26     	
000000  b53e              PUSH     {r1-r5,lr}
000002  2503              MOVS     r5,#3
000004  2401              MOVS     r4,#1
000006  2300              MOVS     r3,#0
000008  e88d0038          STM      sp,{r3-r5}
00000c  4623              MOV      r3,r4
00000e  f7fffffe          BL       _ZN9GpioClassC1EP12GPIO_TypeDef3PinNS_4ModeENS_10OutputTypeENS_4PuPdENS_11OutputSpeedE ; GpioClass::GpioClass(GPIO_TypeDef*, Pin, GpioClass::Mode, GpioClass::OutputType, GpioClass::PuPd, GpioClass::OutputSpeed)
000012  bd3e              POP      {r1-r5,pc}
                          ENDP


                          AREA ||area_number.43||, COMGROUP=_ZN8LedClassC1EP12GPIO_TypeDef3Pin, LINKORDER=||i._ZN8LedClassC1EP12GPIO_TypeDef3Pin||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.43||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8LedClassC1EP12GPIO_TypeDef3Pin||
                          DCD      0x00000001

;*** Start embedded assembler ***

#line 1 "..\\User\\main.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_main_cpp_main___ZN25_INTERNAL_8_main_cpp_main7__REV16Ej|
#line 138 "..\\CMSIS\\core_cmInstr.h"
|__asm___8_main_cpp_main___ZN25_INTERNAL_8_main_cpp_main7__REV16Ej| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_main_cpp_main___ZN25_INTERNAL_8_main_cpp_main7__REVSHEi|
#line 153
|__asm___8_main_cpp_main___ZN25_INTERNAL_8_main_cpp_main7__REVSHEi| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___8_main_cpp_main___ZN25_INTERNAL_8_main_cpp_main5__RRXEj|
#line 328
|__asm___8_main_cpp_main___ZN25_INTERNAL_8_main_cpp_main5__RRXEj| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
