; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--cpp11 --list --split_sections --debug -c --asm --interleave -o..\output\main.o --asm_dir=..\Listings\ --list_dir=..\Listings\ --depend=..\output\main.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\CMSIS -I..\System -I..\..\LTDC -I.\RTE\_LCD -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=524 -DSTM32F429xx -DSTM32F429_439xx --omf_browse=..\output\main.crf ..\User\main.cpp]
                          THUMB

                          AREA ||i._ZN3LED2OnEv||, CODE, READONLY, ALIGN=2

                  _ZN3LED2OnEv PROC ; LED::On()
;;;19     	
;;;20     	void On(void)
000000  4902              LDR      r1,|L1.12|
;;;21     	{
;;;22     		GPIOG->BSRRL = 0x6000;
000002  f44f40c0          MOV      r0,#0x6000
000006  8008              STRH     r0,[r1,#0]
;;;23     	}
000008  4770              BX       lr
;;;24     	
                          ENDP

00000a  0000              DCW      0x0000
                  |L1.12|
                          DCD      0x40021818

                          AREA ||i._ZN3LED3OffEv||, CODE, READONLY, ALIGN=2

                  _ZN3LED3OffEv PROC ; LED::Off()
;;;24     	
;;;25     	void Off(void)
000000  4902              LDR      r1,|L2.12|
;;;26     	{
;;;27     		GPIOG->BSRRH = 0x6000;
000002  f44f40c0          MOV      r0,#0x6000
000006  8008              STRH     r0,[r1,#0]
;;;28     	}
000008  4770              BX       lr
;;;29     	
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      0x4002181a

                          AREA ||i._ZN3LED4InitEv||, CODE, READONLY, ALIGN=2

                  _ZN3LED4InitEv PROC ; LED::Init()
;;;7      
;;;8      	void Init(void)
000000  4811              LDR      r0,|L3.72|
;;;9      	{
;;;10     		RCC->AHB1ENR |= 0x40;
000002  6801              LDR      r1,[r0,#0]
000004  f0410140          ORR      r1,r1,#0x40
000008  6001              STR      r1,[r0,#0]
;;;11     		
;;;12     		GPIOG->MODER &= ~0x3C000000;
00000a  4810              LDR      r0,|L3.76|
00000c  6801              LDR      r1,[r0,#0]
00000e  f0215170          BIC      r1,r1,#0x3c000000
000012  6001              STR      r1,[r0,#0]
;;;13     		GPIOG->MODER |= 0x14000000;
000014  6801              LDR      r1,[r0,#0]
000016  f04151a0          ORR      r1,r1,#0x14000000
00001a  6001              STR      r1,[r0,#0]
;;;14     		GPIOG->OTYPER &= ~0x6000;
00001c  1d00              ADDS     r0,r0,#4
00001e  6801              LDR      r1,[r0,#0]
000020  f42141c0          BIC      r1,r1,#0x6000
000024  6001              STR      r1,[r0,#0]
;;;15     		GPIOG->PUPDR &= ~0x3C000000;
000026  4809              LDR      r0,|L3.76|
000028  300c              ADDS     r0,r0,#0xc
00002a  6801              LDR      r1,[r0,#0]
00002c  f0215170          BIC      r1,r1,#0x3c000000
000030  6001              STR      r1,[r0,#0]
;;;16     		GPIOG->OSPEEDR |= 0x3C000000;
000032  1f00              SUBS     r0,r0,#4
000034  6801              LDR      r1,[r0,#0]
000036  f0415170          ORR      r1,r1,#0x3c000000
00003a  6001              STR      r1,[r0,#0]
;;;17     		GPIOG->BSRRH = 0x6000;
00003c  4903              LDR      r1,|L3.76|
00003e  f44f40c0          MOV      r0,#0x6000
000042  311a              ADDS     r1,r1,#0x1a
000044  8008              STRH     r0,[r1,#0]
;;;18     	}
000046  4770              BX       lr
;;;19     	
                          ENDP

                  |L3.72|
                          DCD      0x40023830
                  |L3.76|
                          DCD      0x40021800

                          AREA ||i._ZN3LED6toggleEv||, CODE, READONLY, ALIGN=2

                  _ZN3LED6toggleEv PROC ; LED::toggle()
;;;29     	
;;;30     	void toggle(void)
000000  4802              LDR      r0,|L4.12|
;;;31     	{
;;;32     		GPIOG->ODR ^= 0x6000;
000002  6801              LDR      r1,[r0,#0]
000004  f48141c0          EOR      r1,r1,#0x6000
000008  6001              STR      r1,[r0,#0]
;;;33     	}
00000a  4770              BX       lr
;;;34     
                          ENDP

                  |L4.12|
                          DCD      0x40021814

                          AREA ||i._ZN6System4InitEv||, CODE, READONLY, ALIGN=1

                  _ZN6System4InitEv PROC ; System::Init()
;;;38     
;;;39     	void Init(void)
000000  f04f20e0          MOV      r0,#0xe000e000
;;;40     	{
;;;41     		SysTick->LOAD = 22500 - 1;
000004  f24571e3          MOV      r1,#0x57e3
000008  6141              STR      r1,[r0,#0x14]
;;;42     		SysTick->VAL = 0x00;
00000a  2100              MOVS     r1,#0
00000c  6181              STR      r1,[r0,#0x18]
;;;43     		SysTick->CTRL = 0x01;
00000e  2101              MOVS     r1,#1
000010  6101              STR      r1,[r0,#0x10]
;;;44     	}
000012  4770              BX       lr
;;;45     	
                          ENDP


                          AREA ||i._ZN6System7delayMsEj||, CODE, READONLY, ALIGN=1

                  _ZN6System7delayMsEj PROC ; System::delayMs(unsigned)
;;;45     	
;;;46     	void delayMs(uint32_t ms)
000000  b530              PUSH     {r4,r5,lr}
;;;47     	{
;;;48     		uint32_t tickValue = ms * 22500;
;;;49     		uint32_t oldValue = SysTick->VAL;
000002  f04f24e0          MOV      r4,#0xe000e000
000006  f24571e4          MOV      r1,#0x57e4            ;48
00000a  69a3              LDR      r3,[r4,#0x18]
00000c  4348              MULS     r0,r1,r0              ;48
;;;50     		uint32_t newValue = 0;
;;;51     		uint32_t cntValue = 0;
00000e  2100              MOVS     r1,#0
                  |L6.16|
;;;52     		
;;;53     		do {
;;;54     		
;;;55     			newValue = SysTick->VAL;
000010  69a2              LDR      r2,[r4,#0x18]
;;;56     			if (newValue != oldValue) {
000012  429a              CMP      r2,r3
000014  d006              BEQ      |L6.36|
;;;57     				if (newValue > oldValue) {
000016  d901              BLS      |L6.28|
;;;58     					cntValue += SysTick->LOAD + oldValue - newValue;
000018  6965              LDR      r5,[r4,#0x14]
00001a  442b              ADD      r3,r3,r5
                  |L6.28|
;;;59     				} else {
;;;60     					cntValue += oldValue - newValue;
00001c  eba30302          SUB      r3,r3,r2
000020  4419              ADD      r1,r1,r3
;;;61     				}
;;;62     				oldValue = newValue;
000022  4613              MOV      r3,r2
                  |L6.36|
;;;63     			}
;;;64     		
;;;65     		} while (tickValue > cntValue);
000024  4288              CMP      r0,r1
000026  d8f3              BHI      |L6.16|
;;;66     	}
000028  bd30              POP      {r4,r5,pc}
;;;67     
                          ENDP


                          AREA ||i.main||, CODE, READONLY, ALIGN=1

                  main PROC
;;;70     
;;;71     int main(void)
000000  b508              PUSH     {r3,lr}
;;;72     {
;;;73     	SDRAM::Init();
000002  f7fffffe          BL       _ZN5SDRAM4InitEv ; SDRAM::Init()
;;;74     	System::Init();
000006  f7fffffe          BL       _ZN6System4InitEv ; System::Init()
;;;75     	LED::Init();
00000a  f7fffffe          BL       _ZN3LED4InitEv ; LED::Init()
;;;76     	Spi5::Init();
00000e  f7fffffe          BL       _ZN4Spi54InitEv ; Spi5::Init()
;;;77     	Ltdc::Init();
000012  f7fffffe          BL       _ZN4Ltdc4InitEv ; Ltdc::Init()
;;;78     	Ltdc::setColor(0xF800);
000016  f44f4078          MOV      r0,#0xf800
00001a  f7fffffe          BL       _ZN4Ltdc8setColorEj ; Ltdc::setColor(unsigned)
;;;79     	Ltdc::drawRect(50, 50, 100, 100, 0x07FF);
00001e  f24070ff          MOV      r0,#0x7ff
000022  2364              MOVS     r3,#0x64
000024  2132              MOVS     r1,#0x32
000026  9000              STR      r0,[sp,#0]
000028  461a              MOV      r2,r3
00002a  4608              MOV      r0,r1
00002c  f7fffffe          BL       _ZN4Ltdc8drawRectEjjjjj ; Ltdc::drawRect(unsigned, unsigned, unsigned, unsigned, unsigned)
                  |L7.48|
;;;80     	while (true)
;;;81     	{
;;;82     		LED::toggle();
000030  f7fffffe          BL       _ZN3LED6toggleEv ; LED::toggle()
;;;83     		System::delayMs(100);
000034  2064              MOVS     r0,#0x64
000036  f7fffffe          BL       _ZN6System7delayMsEj ; System::delayMs(unsigned)
00003a  e7f9              B        |L7.48|
;;;84     	}
;;;85     }
;;;86     
                          ENDP


                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN6System7delayMsEj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._ZN6System7delayMsEj||
                          DCD      0x00000001

                          AREA ||area_number.9||, LINKORDER=||i._ZN3LED6toggleEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN3LED6toggleEv||
                          DCD      0x00000001

                          AREA ||area_number.10||, LINKORDER=||i._ZN3LED4InitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN3LED4InitEv||
                          DCD      0x00000001

                          AREA ||area_number.11||, LINKORDER=||i._ZN6System4InitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN6System4InitEv||
                          DCD      0x00000001

                          AREA ||area_number.12||, LINKORDER=||i.main||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.main||
                          DCD      0x00000001

                          AREA ||area_number.13||, LINKORDER=||i._ZN3LED2OnEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.13||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN3LED2OnEv||
                          DCD      0x00000001

                          AREA ||area_number.14||, LINKORDER=||i._ZN3LED3OffEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.14||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN3LED3OffEv||
                          DCD      0x00000001

;*** Start embedded assembler ***

#line 1 "..\\User\\main.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_main_cpp_35b877fc___ZN29_INTERNAL_8_main_cpp_35b877fc7__REV16Ej|
#line 138 "..\\CMSIS\\core_cmInstr.h"
|__asm___8_main_cpp_35b877fc___ZN29_INTERNAL_8_main_cpp_35b877fc7__REV16Ej| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_main_cpp_35b877fc___ZN29_INTERNAL_8_main_cpp_35b877fc7__REVSHEi|
#line 153
|__asm___8_main_cpp_35b877fc___ZN29_INTERNAL_8_main_cpp_35b877fc7__REVSHEi| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___8_main_cpp_35b877fc___ZN29_INTERNAL_8_main_cpp_35b877fc5__RRXEj|
#line 328
|__asm___8_main_cpp_35b877fc___ZN29_INTERNAL_8_main_cpp_35b877fc5__RRXEj| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
