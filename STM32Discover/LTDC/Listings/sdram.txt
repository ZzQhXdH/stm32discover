; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--cpp11 --list --split_sections --debug -c --asm --interleave -o..\output\sdram.o --asm_dir=..\Listings\ --list_dir=..\Listings\ --depend=..\output\sdram.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\CMSIS -I..\System -I..\..\LTDC -I.\RTE\_LCD -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=524 -DSTM32F429xx -DSTM32F429_439xx --omf_browse=..\output\sdram.crf ..\Periph\SDRAM.cpp]
                          THUMB

                          AREA ||i._ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM12WriteModeRegEjjj||, CODE, READONLY, ALIGN=1

                  _ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM12WriteModeRegEjjj PROC ; [local to SDRAM_cpp]::SDRAM::WriteModeReg(unsigned, unsigned, unsigned)
;;;97     	
;;;98     	static void WriteModeReg(uint32_t mode, uint32_t refresh, uint32_t value)
000000  ea401041          ORR      r0,r0,r1,LSL #5
;;;99     	{
;;;100    		FMC_Bank5_6->SDCMR = mode |
000004  ea402042          ORR      r0,r0,r2,LSL #9
000008  f0400108          ORR      r1,r0,#8
00000c  f04f4020          MOV      r0,#0xa0000000
000010  f8c01150          STR      r1,[r0,#0x150]
                  |L1.20|
;;;101    							 0x08 |
;;;102    							 (refresh << 5) |
;;;103    							 (value << 9);
;;;104    		while (0 != (FMC_Bank5_6->SDSR & 0x20));
000014  f8d01158          LDR      r1,[r0,#0x158]
000018  0689              LSLS     r1,r1,#26
00001a  d4fb              BMI      |L1.20|
;;;105    	}
00001c  4770              BX       lr
;;;106    	
                          ENDP


                          AREA ||i._ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM8GpioInitEP12GPIO_TypeDefj||, CODE, READONLY, ALIGN=1

                  _ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM8GpioInitEP12GPIO_TypeDefj PROC ; [local to SDRAM_cpp]::SDRAM::GpioInit(GPIO_TypeDef*, unsigned)
;;;106    	
;;;107    	static void GpioInit(GPIO_TypeDef *port, uint32_t pinMask)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;108    	{
;;;109    		uint32_t mask;
;;;110    		for (uint32_t i = 0; i < 16; i ++) {
000004  2200              MOVS     r2,#0
;;;111    		
;;;112    			mask = Pin(i);
;;;113    			if ((pinMask & mask) != 0) {
;;;114    				
;;;115    				port->MODER &= ~(0x03 << i * 2);
;;;116    				port->MODER |= 0x02 << i * 2;
;;;117    				port->PUPDR &= ~(0x03 << i * 2);
;;;118    				port->OSPEEDR |= (0x03 << i * 2);
;;;119    				port->OTYPER &= ~(0x01 << i);
;;;120    				if (i < 8) {
;;;121    					port->AFR[0] &= ~(0x0F << 4 * i);
000006  270f              MOVS     r7,#0xf
000008  f04f0901          MOV      r9,#1
;;;122    					port->AFR[0] |= 0x0C << 4 * i;
00000c  260c              MOVS     r6,#0xc
                  |L2.14|
00000e  fa09f402          LSL      r4,r9,r2
000012  4221              TST      r1,r4                 ;113
000014  d035              BEQ      |L2.130|
000016  f8d0c000          LDR      r12,[r0,#0]           ;115
00001a  0055              LSLS     r5,r2,#1              ;115
00001c  2303              MOVS     r3,#3                 ;115
00001e  40ab              LSLS     r3,r3,r5              ;115
000020  ea2c0c03          BIC      r12,r12,r3            ;115
000024  f8c0c000          STR      r12,[r0,#0]           ;115
000028  f8d0c000          LDR      r12,[r0,#0]           ;116
00002c  f04f0802          MOV      r8,#2                 ;116
000030  fa08f805          LSL      r8,r8,r5              ;116
000034  ea4c0c08          ORR      r12,r12,r8            ;116
000038  f8c0c000          STR      r12,[r0,#0]           ;116
00003c  68c5              LDR      r5,[r0,#0xc]          ;117
00003e  439d              BICS     r5,r5,r3              ;117
000040  60c5              STR      r5,[r0,#0xc]          ;117
000042  6885              LDR      r5,[r0,#8]            ;118
000044  431d              ORRS     r5,r5,r3              ;118
000046  6085              STR      r5,[r0,#8]            ;118
000048  6843              LDR      r3,[r0,#4]            ;119
00004a  43a3              BICS     r3,r3,r4              ;119
00004c  6043              STR      r3,[r0,#4]            ;119
00004e  2a08              CMP      r2,#8                 ;120
000050  d20b              BCS      |L2.106|
000052  6a04              LDR      r4,[r0,#0x20]         ;121
000054  0093              LSLS     r3,r2,#2              ;121
000056  fa07f503          LSL      r5,r7,r3              ;121
00005a  43ac              BICS     r4,r4,r5              ;121
00005c  6204              STR      r4,[r0,#0x20]         ;121
00005e  6a04              LDR      r4,[r0,#0x20]
000060  fa06f303          LSL      r3,r6,r3
000064  431c              ORRS     r4,r4,r3
000066  6204              STR      r4,[r0,#0x20]
000068  e00b              B        |L2.130|
                  |L2.106|
;;;123    				} else {
;;;124    					port->AFR[1] &= ~(0x0F << 4 * (i - 8));
00006a  0093              LSLS     r3,r2,#2
00006c  3b20              SUBS     r3,r3,#0x20
00006e  6a45              LDR      r5,[r0,#0x24]
000070  fa07f403          LSL      r4,r7,r3
000074  43a5              BICS     r5,r5,r4
000076  6245              STR      r5,[r0,#0x24]
;;;125    					port->AFR[1] |= 0x0C << 4 * (i - 8);
000078  6a44              LDR      r4,[r0,#0x24]
00007a  fa06f303          LSL      r3,r6,r3
00007e  4323              ORRS     r3,r3,r4
000080  6243              STR      r3,[r0,#0x24]
                  |L2.130|
000082  1c52              ADDS     r2,r2,#1
000084  2a10              CMP      r2,#0x10              ;110
000086  d3c2              BCC      |L2.14|
;;;126    				}
;;;127    			}
;;;128    		}
;;;129    	}
000088  e8bd83f0          POP      {r4-r9,pc}
;;;130    	
                          ENDP


                          AREA ||i._ZN5SDRAM4InitEv||, CODE, READONLY, ALIGN=2

                  _ZN5SDRAM4InitEv PROC ; SDRAM::Init()
;;;35     	
;;;36     	void Init(void)
000000  482b              LDR      r0,|L3.176|
;;;37     	{
000002  b510              PUSH     {r4,lr}
;;;38     		RCC->AHB1ENR |= 0x7E;
000004  6801              LDR      r1,[r0,#0]
000006  f041017e          ORR      r1,r1,#0x7e
00000a  6001              STR      r1,[r0,#0]
;;;39     		RCC->AHB3ENR |= 0x01;
00000c  4828              LDR      r0,|L3.176|
00000e  3008              ADDS     r0,r0,#8
000010  6801              LDR      r1,[r0,#0]
000012  f0410101          ORR      r1,r1,#1
000016  6001              STR      r1,[r0,#0]
;;;40     		// 5, 6
;;;41     		GpioInit(GPIOB, Pin(5) | Pin(6));
000018  2160              MOVS     r1,#0x60
00001a  4826              LDR      r0,|L3.180|
00001c  f7fffffe          BL       _ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM8GpioInitEP12GPIO_TypeDefj ; [local to SDRAM_cpp]::SDRAM::GpioInit(GPIO_TypeDef*, unsigned)
;;;42     		
;;;43     		// 0
;;;44     		GpioInit(GPIOC, Pin(0));
000020  2101              MOVS     r1,#1
000022  4825              LDR      r0,|L3.184|
000024  f7fffffe          BL       _ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM8GpioInitEP12GPIO_TypeDefj ; [local to SDRAM_cpp]::SDRAM::GpioInit(GPIO_TypeDef*, unsigned)
;;;45     		
;;;46     		// 0, 1, 8, 9, 10, 14, 15
;;;47     		GpioInit(GPIOD, Pin(0) | Pin(1) | Pin(8) | Pin(9) | Pin(10) |
000028  f24c7103          MOV      r1,#0xc703
00002c  4823              LDR      r0,|L3.188|
00002e  f7fffffe          BL       _ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM8GpioInitEP12GPIO_TypeDefj ; [local to SDRAM_cpp]::SDRAM::GpioInit(GPIO_TypeDef*, unsigned)
;;;48     						Pin(14) | Pin(15));
;;;49     		
;;;50     		// 0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15
;;;51     		GpioInit(GPIOE, Pin(0) | Pin(1) | Pin(7) | Pin(8) |
000032  f64f7183          MOV      r1,#0xff83
000036  4822              LDR      r0,|L3.192|
000038  f7fffffe          BL       _ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM8GpioInitEP12GPIO_TypeDefj ; [local to SDRAM_cpp]::SDRAM::GpioInit(GPIO_TypeDef*, unsigned)
;;;52     						Pin(9) | Pin(10) | Pin(11) | Pin(12) |
;;;53     						Pin(13) | Pin(14) | Pin(15));
;;;54     		
;;;55     		// 0, 1, 2, 3, 4, 5, 11, 12, 13, 14, 15
;;;56     		GpioInit(GPIOF, Pin(0) | Pin(1) | Pin(2) | Pin(3) |
00003c  f64f013f          MOV      r1,#0xf83f
000040  4820              LDR      r0,|L3.196|
000042  f7fffffe          BL       _ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM8GpioInitEP12GPIO_TypeDefj ; [local to SDRAM_cpp]::SDRAM::GpioInit(GPIO_TypeDef*, unsigned)
;;;57     						Pin(4) | Pin(5) | Pin(11) | Pin(12) |
;;;58     						Pin(13) | Pin(14) | Pin(15));
;;;59     		
;;;60     		// 0, 1, 4, 5, 8, 15
;;;61     		GpioInit(GPIOG, Pin(0) | Pin(1) |
000046  f2481133          MOV      r1,#0x8133
00004a  481f              LDR      r0,|L3.200|
00004c  f7fffffe          BL       _ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM8GpioInitEP12GPIO_TypeDefj ; [local to SDRAM_cpp]::SDRAM::GpioInit(GPIO_TypeDef*, unsigned)
;;;62     						Pin(4) | Pin(5) | 
;;;63     						Pin(8) | Pin(15));
;;;64     		
;;;65     		FMC_Bank5_6->SDCR[1] = (0 << 0) | // Col = 8
000050  f6401054          MOV      r0,#0x954
000054  06c4              LSLS     r4,r0,#27
000056  f8c40144          STR      r0,[r4,#0x144]
;;;66     								(1 << 2) | // Row = 12
;;;67     								(1 << 4) | // 16Bit
;;;68     								(1 << 6) | // 4bank
;;;69     								(2 << 7) | // 2 CAS Laency
;;;70     								(0 << 9) | // Enable Write
;;;71     								(2 << 10) | // CLK = 90MHz
;;;72     								(0 << 12) | // Burst Read Disable
;;;73     								(0 << 13); // Dis Rpipe
;;;74     		/* 这几位需要在SDCR1寄存器中设置 **/
;;;75     		FMC_Bank5_6->SDCR[0] = (2 << 10) | // CLK = 90MHz
00005a  f44f50c0          MOV      r0,#0x1800
00005e  f8c40140          STR      r0,[r4,#0x140]
;;;76     								(1 << 12) | // Burst Read Enable
;;;77     								(0 << 13); // Dis Rpipe
;;;78     		
;;;79     		FMC_Bank5_6->SDTR[1] = (1 << 0) | // tMRD = 2 Cycle
000062  481a              LDR      r0,|L3.204|
000064  f8c4014c          STR      r0,[r4,#0x14c]
;;;80     								(6 << 4) | // tXSR = 11.1 * 7 > 70ns
;;;81     								(3 << 8) | // tRAS = 11.1 * 4 > 42ns
;;;82     								(5 << 12) | // tRC = 11.1 * 6 > 63ns
;;;83     								(1 << 16) | // tWR = 2 Cycle
;;;84     								(1 << 20) | // tRP = 11.1 * 2 > 15ns
;;;85     								(1 << 24); // tRCD = 11.1 * 2 > 15ns
;;;86     		/* 这几位需要在SDTR1寄存器中设置 **/						
;;;87     		FMC_Bank5_6->SDTR[0] = (1 << 20) | // tRP = 11.1 * 2 > 15ns
000068  4819              LDR      r0,|L3.208|
00006a  f8c40148          STR      r0,[r4,#0x148]
;;;88     								(5 << 12); // tRC = 11.1 * 6 > 63ns
;;;89     	
;;;90     		WriteModeReg(0x01, 0, 0);
00006e  2200              MOVS     r2,#0
000070  4611              MOV      r1,r2
000072  2001              MOVS     r0,#1
000074  f7fffffe          BL       _ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM12WriteModeRegEjjj ; [local to SDRAM_cpp]::SDRAM::WriteModeReg(unsigned, unsigned, unsigned)
;;;91     		for (uint32_t t = 0; t < 0x1FFF; t ++);
000078  2000              MOVS     r0,#0
00007a  f64171ff          MOV      r1,#0x1fff
                  |L3.126|
00007e  1c40              ADDS     r0,r0,#1
000080  4288              CMP      r0,r1
000082  d3fc              BCC      |L3.126|
;;;92     		WriteModeReg(0x02, 0, 0);
000084  2200              MOVS     r2,#0
000086  4611              MOV      r1,r2
000088  2002              MOVS     r0,#2
00008a  f7fffffe          BL       _ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM12WriteModeRegEjjj ; [local to SDRAM_cpp]::SDRAM::WriteModeReg(unsigned, unsigned, unsigned)
;;;93     		WriteModeReg(0x03, 7, 0);
00008e  2200              MOVS     r2,#0
000090  2107              MOVS     r1,#7
000092  2003              MOVS     r0,#3
000094  f7fffffe          BL       _ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM12WriteModeRegEjjj ; [local to SDRAM_cpp]::SDRAM::WriteModeReg(unsigned, unsigned, unsigned)
;;;94     		WriteModeReg(0x04, 0, 0x222);
000098  f2402222          MOV      r2,#0x222
00009c  2100              MOVS     r1,#0
00009e  2004              MOVS     r0,#4
0000a0  f7fffffe          BL       _ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM12WriteModeRegEjjj ; [local to SDRAM_cpp]::SDRAM::WriteModeReg(unsigned, unsigned, unsigned)
;;;95     		FMC_Bank5_6->SDRTR = 1386 << 1;
0000a4  f64020d4          MOV      r0,#0xad4
0000a8  f8c40154          STR      r0,[r4,#0x154]
;;;96     	}
0000ac  bd10              POP      {r4,pc}
;;;97     	
                          ENDP

0000ae  0000              DCW      0x0000
                  |L3.176|
                          DCD      0x40023830
                  |L3.180|
                          DCD      0x40020400
                  |L3.184|
                          DCD      0x40020800
                  |L3.188|
                          DCD      0x40020c00
                  |L3.192|
                          DCD      0x40021000
                  |L3.196|
                          DCD      0x40021400
                  |L3.200|
                          DCD      0x40021800
                  |L3.204|
                          DCD      0x01115361
                  |L3.208|
                          DCD      0x00105000

                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM8GpioInitEP12GPIO_TypeDefj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM8GpioInitEP12GPIO_TypeDefj||
                          DCD      0x00000001

                          AREA ||area_number.5||, LINKORDER=||i._ZN5SDRAM4InitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5SDRAM4InitEv||
                          DCD      0x00000001

                          AREA ||area_number.6||, LINKORDER=||i._ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM12WriteModeRegEjjj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5SDRAM12WriteModeRegEjjj||
                          DCD      0x00000001

;*** Start embedded assembler ***

#line 1 "..\\Periph\\SDRAM.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_SDRAM_cpp_4bc9f17b___ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b7__REV16Ej|
#line 138 "..\\CMSIS\\core_cmInstr.h"
|__asm___9_SDRAM_cpp_4bc9f17b___ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b7__REV16Ej| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_SDRAM_cpp_4bc9f17b___ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b7__REVSHEi|
#line 153
|__asm___9_SDRAM_cpp_4bc9f17b___ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b7__REVSHEi| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_SDRAM_cpp_4bc9f17b___ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5__RRXEj|
#line 328
|__asm___9_SDRAM_cpp_4bc9f17b___ZN30_INTERNAL_9_SDRAM_cpp_4bc9f17b5__RRXEj| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
